{"version":3,"file":"static/js/700.bbca4b1b.chunk.js","mappings":"yNAoCA,UAhCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACIC,EAAAA,EAAAA,IAAkBJ,GADtB,OAChBK,EADgB,OAEtBN,EAAWM,EAAYC,SAFD,2CAAH,qDAIrBH,GACD,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQS,QACP,qEAEA,wBACGT,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,wCAAgBA,EAAOC,WACvB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAKV,C,+LChCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAU,+BAAiCC,GADjC,cAC3BE,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IACrB,yBAA2BC,EAAS,UAAYK,EAAQ,WAF1B,cAC1BH,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBG,EAAiB,mCAAG,WAAMR,GAAN,uFACRC,EAAAA,EAAAA,IAAU,iBAAUD,EAAV,aAA0BE,GAD5B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAiB,mCAAG,WAAMT,GAAN,uFACRC,EAAAA,EAAAA,IACrB,UAAYD,EAAK,oBAAsBE,GAFV,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBb,EAAiB,mCAAG,WAAMQ,GAAN,uFACRC,EAAAA,EAAAA,IACrB,UAAYD,EAAK,oBAAsBE,EAAS,WAFnB,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD","sources":["pages/Movies/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../../services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      const movieReview = await fetchMovieReviews(movieId);\n      setReviews(movieReview.results);\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>Written by {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst apiKey = 'befeaf2f7d22fb84137c789361663b87';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day?api_key=' + apiKey);\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    '/search/movie?api_key=' + apiKey + '&query=' + query + '&page=1'\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=` + apiKey);\n  return response.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(\n    '/movie/' + id + '/credits?api_key=' + apiKey\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    '/movie/' + id + '/reviews?api_key=' + apiKey + '&page=1'\n  );\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","movieReview","results","length","map","review","author","content","id","axios","apiKey","fetchTrendingMovies","response","data","fetchMoviesByQuery","query","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}